package com.trade.database.pojo;

// Generated Apr 24, 2017 6:58:03 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "tradesys")
public class Product implements java.io.Serializable {

	private Integer id;
	private Category category;
	private Status status;
	private User user;
	private String prodName;
	private String description;
	private Date createTime;
	private Double quantity;
	private Set<Orderproduct> orderproducts = new HashSet<Orderproduct>(0);
	private Set<Pricesslot> pricesslots = new HashSet<Pricesslot>(0);
	private Set<Comments> commentses = new HashSet<Comments>(0);
	private Set<Productpicture> productpictures = new HashSet<Productpicture>(0);

	public Product() {
	}

	public Product(Category category, Status status, User user,
			String prodName, String description, Date createTime,
			Double quantity, Set<Orderproduct> orderproducts,
			Set<Pricesslot> pricesslots, Set<Comments> commentses,
			Set<Productpicture> productpictures) {
		this.category = category;
		this.status = status;
		this.user = user;
		this.prodName = prodName;
		this.description = description;
		this.createTime = createTime;
		this.quantity = quantity;
		this.orderproducts = orderproducts;
		this.pricesslots = pricesslots;
		this.commentses = commentses;
		this.productpictures = productpictures;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "status")
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "prod_name", length = 100)
	public String getProdName() {
		return this.prodName;
	}

	public void setProdName(String prodName) {
		this.prodName = prodName;
	}

	@Column(name = "description", length = 500)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "quantity", precision = 22, scale = 0)
	public Double getQuantity() {
		return this.quantity;
	}

	public void setQuantity(Double quantity) {
		this.quantity = quantity;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Orderproduct> getOrderproducts() {
		return this.orderproducts;
	}

	public void setOrderproducts(Set<Orderproduct> orderproducts) {
		this.orderproducts = orderproducts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Pricesslot> getPricesslots() {
		return this.pricesslots;
	}

	public void setPricesslots(Set<Pricesslot> pricesslots) {
		this.pricesslots = pricesslots;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Comments> getCommentses() {
		return this.commentses;
	}

	public void setCommentses(Set<Comments> commentses) {
		this.commentses = commentses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Productpicture> getProductpictures() {
		return this.productpictures;
	}

	public void setProductpictures(Set<Productpicture> productpictures) {
		this.productpictures = productpictures;
	}

}
